#%RAML 1.0
title: ILL Requesting Agency API
version: v1.0
protocols: [ HTTP, HTTPS ]
baseUri: http://localhost:9130

documentation:
  - title: Interlibrary Loan Requesting Agency API
    content: <b>API for interlibrary loan requesting agency</b>

types:
  saRequest_Request:    !include mod-ill-ramls/schemas/sa-request/request/request.schema
  saRequest_Response:    !include mod-ill-ramls/schemas/sa-request/response/request-confirmation.schema
  saMessage_Request:    !include mod-ill-ramls/schemas/ISO18626/supplying-agency-message.schema
  saMessage_Response:    !include mod-ill-ramls/schemas/ISO18626/supplying-agency-message-confirmation.schema
  submission:    !include mod-ill-ramls/schemas/submission/submission.json
  submissions:   !include mod-ill-ramls/schemas/submission/submissions.json
  submissionStatus:     !include mod-ill-ramls/schemas/submission-status/submission-status.json
  submissionStatuses:   !include mod-ill-ramls/schemas/submission-status/submission-statuses.json
  request:    !include mod-ill-ramls/schemas/request/request.json
  requests:   !include mod-ill-ramls/schemas/request/requests.json
  searchResponse: !include mod-ill-ramls/schemas/search/search-response.schema
  errors:     !include raml-util/schemas/errors.schema
  parameters: !include raml-util/schemas/parameters.schema
  #UUID:
  #  type: string
  #  pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$

traits:
  language: !include raml-util/traits/language.raml
  pageable: !include raml-util/traits/pageable.raml
  searchable: !include raml-util/traits/searchable.raml
  validate: !include raml-util/traits/validation.raml

resourceTypes:
  collection: !include raml-util/rtypes/collection.raml
  collection-item: !include raml-util/rtypes/item-collection.raml
  get-only: !include raml-util/rtypes/get-only.raml

/ill-ra:
  /search:
    get:
      is: [
        pageable,
        searchable: {description: "searchable using CQL", example: "title=\"The Mandalorian\""},
      ]
      displayName: Perform a search on the supplying agency
      responses:
        200:
          description: Returns search results
          body:
            application/json:
              type: searchResponse
              example:
                strict: false
                value: !include mod-ill-ramls/examples/search/search-response.json
  /sa-request:
    post:
      displayName: Make a request to a supplying agency
      description: Provides a JSON equivalent of an ISO18626 "Request" endpoint. The body is a subset of that specified by ISO18626, the included parts are those that cannot be supplied by the system
      body:
        application/json:
          type: saRequest_Request
          examples:
            ex: !include mod-ill-ramls/examples/sa-request/request/request.json
      responses:
        201:
          description: Returns success body for request submission made
          body:
            application/json:
              type: saRequest_Response
              example:
                strict: false
                value: !include mod-ill-ramls/examples/sa-request/response/request-confirmation.json
  /submissions:
    displayName: Submissions
    type:
      collection:
        exampleCollection: !include mod-ill-ramls/examples/submission/submissions.json
        exampleItem: !include mod-ill-ramls/examples/submission/submission.json
        schemaCollection: submissions
        schemaItem: submission
    get:
      is: [pageable,
        searchable: {description: "searchable using CQL",
                        example: "id=\"cf23adf0-61ba-4887-bf82-956c4aae2260\""},
        ]
      responses:
        501:
          description: "Not implemented yet"
    post:
      is: [validate]
    /{submissionId}:
      type:
        collection-item:
          exampleItem: !include mod-ill-ramls/examples/submission/submission.json
          schema: submission
      get:
        responses:
          501:
            description: "Not implemented yet"
      put:
        is: [validate]
        responses:
          501:
            description: "Not implemented yet"
      delete:
        responses:
          501:
            description: "Not implemented yet"
      /requests:
        type:
          collection:
            exampleCollection: !include mod-ill-ramls/examples/request/requests.json
            exampleItem: !include mod-ill-ramls/examples/request/request.json
            schemaCollection: requests
            schemaItem: request
        get:
          is: [pageable]
  /submission-statuses:
    displayName: Submission Statuses
    type:
      collection:
        exampleCollection: !include mod-ill-ramls/examples/submission-status/submission-statuses.json
        exampleItem: !include mod-ill-ramls/examples/submission-status/submission-status.json
        schemaCollection: submissionStatuses
        schemaItem: submissionStatus
    get:
      is: [pageable,
        searchable: {description: "searchable using CQL",
                        example: "id=\"cf23adf0-61ba-4887-bf82-956c4aae2260\""},
        ]
    post:
      is: [validate]
    /{statusId}:
      type:
        collection-item:
          exampleItem: !include mod-ill-ramls/examples/submission-status/submission-status.json
          schema: submissionStatus
      get:
      put:
        is: [validate]
      delete:
  /requests:
    displayName: Requests
    type:
      collection:
        exampleCollection: !include mod-ill-ramls/examples/request/requests.json
        exampleItem: !include mod-ill-ramls/examples/request/request.json
        schemaCollection: requests
        schemaItem: request
    get:
      is: [pageable,
        searchable: {description: "searchable using CQL",
                        example: "id=\"cf23adf0-61ba-4887-bf82-956c4aae2260\""},
        ]
      responses:
        501:
          description: "Not implemented yet"
    post:
      is: [validate]
    /{requestId}:
      type:
        collection-item:
          exampleItem: !include mod-ill-ramls/examples/request/request.json
          schema: request
      get:
        responses:
          501:
            description: "Not implemented yet"
      put:
        is: [validate]
        responses:
          501:
            description: "Not implemented yet"
      delete:
        responses:
          501:
            description: "Not implemented yet"
  /sa-update:
    post:
      description: Receive an arbitrary request update from a supplier and update the request accordingly
      body:
        application/json:
          type: saMessage_Request
      is: [validate]
      responses:
        200:
          body:
            application/json:
              type: saMessage_Response
        501:
          description: "Not implemented yet"
  # /suppliers:
  #   displayName: Supplying agencies
  #   type:
  #     collection:
  #       exampleCollection: !include examples/suppliers.json
  #       exampleItem: !include examples/supplier_get.json
  #       schemaCollection: suppliers
  #       schemaItem: supplier
  #   get:
  #     description: Retrieve a list of available supplying agencies
  #     responses:
  #       501:
  #         description: "Not implemented yet"
  #/connector/{connectorId}:
  #  displayName: Receive an active/inactive update from a connector
  #  uriParameters:
  #    connectorId:
  #      description: The UUID of the connector
  #      type: UUID
  #  post:
  #    description: Receive an update from a connector informing us that it is active
  #  delete:
  #    description: Receive an update from a connector informing us that it is inactive
  #      /status:
  #        type:
  #          collection-item:
  #            exampleItem: !include mod-ill-ramls/examples/request/request_post.json
  #            schema: request
  #        put:
  #          description: Update an interlibary loan request with it's current status from the supplier
  #      /retry:
  #        type:
  #          collection-item:
  #            exampleItem: !include mod-ill-ramls/examples/request/request_post.json
  #            schema: request
  #        put:
  #          description: Request a retry from a request's supplier and update the request accordingly
  #      /reminder:
  #        type:
  #          collection-item:
  #            exampleItem: !include mod-ill-ramls/examples/request/request_post.json
  #            schema: request
  #        put:
  #          description: Send a reminder to a request's supplier and update the request accordingly
  #      /renew:
  #        type:
  #          collection-item:
  #            exampleItem: !include mod-ill-ramls/examples/request/request_post.json
  #            schema: request
  #        put:
  #          description: Request a renewal from a request's supplier and update the request accordingly
  #      /notify:
  #        type:
  #          collection-item:
  #            exampleItem: !include mod-ill-ramls/examples/request/request_post.json
  #            schema: request
  #        put:
  #          description: Send an arbitrary message to a request's supplier and update the request accordingly
